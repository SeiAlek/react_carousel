{"version":3,"sources":["components/CarouselItem.js","components/CarouselList.js","components/CarouselButton.js","components/Carousel.js","components/SettingsNumber.js","components/SettingsCheckbox.js","components/Settings.js","App.js","index.js"],"names":["CarouselItem","url","alt","width","height","className","src","style","CarouselList","images","itemWidth","itemHeight","offset","shift","animationDuration","transform","transition","left","color","map","image","key","id","CarouselButton","dir","handler","type","onClick","Carousel","settings","handleScroll","frameSize","SettingsNumber","name","value","htmlFor","onChange","e","target","SettingsCheckbox","checked","CarouselSettings","setSettings","step","infinity","defaultSettings","App","state","imagesFromServer","restRight","length","restLeft","calculateOffset","rest","correctedRest","direction","isToRight","isToLeft","leftOffset","rightOffset","setState","item","i","Date","leftI","field","correctedValue","Number","isInteger","parseInt","this","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe59de1c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CarouselItem = ({ url, alt, width, height }) => (\n  <li className=\"carousel__item\">\n    <img\n      src={url}\n      alt={alt}\n      className=\"carousel__image\"\n      style={{\n        width: `${width}px`,\n        height: `${height}px`,\n      }}\n    />\n  </li>\n);\n\nCarouselItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nexport default CarouselItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CarouselItem from './CarouselItem';\n\nconst CarouselList = ({\n  images,\n  itemWidth,\n  itemHeight,\n  offset,\n  shift,\n  animationDuration,\n}) => (\n  <ul\n    className=\"carousel__list\"\n    style={{\n      transform: `translateX(${offset}px)`,\n      transition: `transform ${animationDuration}ms ease`,\n      left: `${shift}px`,\n      color: 'red',\n    }}\n  >\n    {images.map(image => (\n      <CarouselItem\n        {...image}\n        width={itemWidth}\n        height={itemHeight}\n        key={image.id}\n      />\n    ))}\n  </ul>\n);\n\nCarouselList.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  offset: PropTypes.number.isRequired,\n  shift: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default CarouselList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CarouselButton = ({ dir, handler }) => (\n  <button\n    id={`carousel-btn-${dir > 0 ? 'prev' : 'next'}`}\n    type=\"button\"\n    className={`carousel__btn carousel__btn--${dir > 0 ? 'prev' : 'next'}`}\n    onClick={() => handler(dir)}\n  />\n);\n\nCarouselButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  dir: PropTypes.number.isRequired,\n};\n\nexport default CarouselButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.css';\nimport CarouselList from './CarouselList';\nimport CarouselButton from './CarouselButton';\n\nconst Carousel = ({\n  images,\n  settings,\n  handleScroll,\n  offset,\n  shift,\n}) => (\n  <div className=\"carousel\">\n    <div\n      className=\"carousel__container\"\n      style={{\n        width: `${settings.frameSize * settings.itemWidth}px`,\n        height: `${settings.itemHeight}px`,\n      }}\n    >\n      <CarouselList\n        images={images}\n        itemWidth={settings.itemWidth}\n        itemHeight={settings.itemHeight}\n        offset={offset}\n        shift={shift}\n        animationDuration={settings.animationDuration}\n      />\n    </div>\n    <CarouselButton dir={1} handler={handleScroll} />\n    <CarouselButton dir={-1} handler={handleScroll} />\n  </div>\n);\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  settings: PropTypes.shape({\n    step: PropTypes.number,\n    frameSize: PropTypes.number,\n    itemWidth: PropTypes.number,\n    itemHeight: PropTypes.number,\n    animationDuration: PropTypes.number.isRequired,\n  }).isRequired,\n  handleScroll: PropTypes.func.isRequired,\n  offset: PropTypes.number.isRequired,\n  shift: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SettingsNumber = ({ id, type, name, value, handler }) => (\n  <label htmlFor={id} className=\"settings__field-label\">\n    <span className=\"settings__fild-name\">{`${name}: `}</span>\n    <input\n      id={id}\n      type={type}\n      value={value}\n      className=\"settings__field\"\n      onChange={e => handler(id, e.target.value)}\n    />\n  </label>\n);\n\nSettingsNumber.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n\nexport default SettingsNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SettingsCheckbox = ({ id, type, name, value, handler }) => (\n  <label htmlFor={id} className=\"settings__field-label\">\n    <span>{`${name}: `}</span>\n    <input\n      id={id}\n      type={type}\n      checked={value}\n      className=\"settings__field\"\n      onChange={e => handler(id, e.target.checked)}\n    />\n  </label>\n);\n\nSettingsCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.bool.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n\nexport default SettingsCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsNumber from './SettingsNumber';\nimport SettingsCheckbox from './SettingsCheckbox';\nimport './Settings.css';\n\nconst CarouselSettings = ({ setSettings, settings }) => (\n  <form className=\"settings\">\n    <SettingsNumber\n      id=\"step\"\n      name=\"Images by step (qty)\"\n      type=\"number\"\n      value={settings.step}\n      handler={setSettings}\n    />\n    <SettingsNumber\n      id=\"frameSize\"\n      name=\"Size of Frame (qty)\"\n      type=\"number\"\n      value={settings.frameSize}\n      handler={setSettings}\n    />\n    <SettingsNumber\n      id=\"itemWidth\"\n      name=\"Width of Item (px)\"\n      type=\"number\"\n      value={settings.itemWidth}\n      handler={setSettings}\n    />\n    <SettingsNumber\n      id=\"itemHeight\"\n      name=\"Height of Item (px)\"\n      type=\"number\"\n      value={settings.itemHeight}\n      handler={setSettings}\n    />\n    <SettingsNumber\n      id=\"animationDuration\"\n      name=\"Animation Duration (ms)\"\n      type=\"number\"\n      value={settings.animationDuration}\n      handler={setSettings}\n    />\n    <SettingsCheckbox\n      id=\"infinity\"\n      name=\"Is Infinity\"\n      type=\"checkbox\"\n      value={settings.infinity}\n      handler={setSettings}\n    />\n  </form>\n);\n\nCarouselSettings.propTypes = {\n  setSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    step: PropTypes.number.isRequired,\n    frameSize: PropTypes.number.isRequired,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    animationDuration: PropTypes.number.isRequired,\n    infinity: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default CarouselSettings;\n","import React from 'react';\nimport './App.css';\nimport Carousel from './components/Carousel';\nimport CarouselSettings from './components/Settings';\nimport imagesFromServer from './api/images.json';\n\nconst defaultSettings = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  itemHeight: 130,\n  animationDuration: 1000,\n  infinity: true,\n};\n\nclass App extends React.PureComponent {\n  state = {\n    images: [...imagesFromServer],\n    settings: { ...defaultSettings },\n    restRight: imagesFromServer.length - defaultSettings.step,\n    restLeft: 0,\n    offset: 0,\n    shift: 0,\n  };\n\n  calculateOffset = (rest) => {\n    const { step, itemWidth, infinity } = this.state.settings;\n\n    const correctedRest = (rest < 0) ? 0 : rest;\n\n    if (infinity) {\n      return step * itemWidth;\n    }\n\n    return (correctedRest < 3)\n      ? correctedRest * itemWidth\n      : step * itemWidth;\n  }\n\n  handleScroll = (direction) => {\n    const { settings, restLeft, restRight } = this.state;\n    const { step, itemWidth, infinity } = settings;\n    const isToRight = direction < 0;\n    const isToLeft = direction > 0;\n    const leftOffset = this.calculateOffset(restLeft);\n    const rightOffset = this.calculateOffset(restRight);\n\n    if (restRight < step && isToRight && infinity) {\n      this.setState(state => ({\n        ...state,\n        images: [\n          ...state.images,\n          ...imagesFromServer.map((item, i) => ({\n            ...item,\n            id: +new Date() + i,\n          })),\n        ],\n        restRight: state.restRight + imagesFromServer.length - step,\n        restLeft: state.restLeft + step,\n        leftI: state.leftI + step,\n        offset: state.offset + rightOffset * direction,\n      }));\n\n      return;\n    }\n\n    if (restLeft < step && isToLeft && infinity) {\n      this.setState(state => ({\n        ...state,\n        images: [\n          ...imagesFromServer.map((item, i) => ({\n            ...item,\n            id: +new Date() + i,\n          })),\n          ...state.images,\n        ],\n        restLeft: state.restLeft + imagesFromServer.length - step,\n        restRight: state.restRight + step,\n        offset: state.offset + leftOffset * direction,\n        shift: state.shift - imagesFromServer.length * itemWidth,\n      }));\n\n      return;\n    }\n\n    if (isToLeft) {\n      this.setState(state => ({\n        ...state,\n        restLeft: (state.restLeft - step > 0) ? state.restLeft - step : 0,\n        restRight: state.restRight + leftOffset / itemWidth,\n        offset: state.offset + leftOffset * direction,\n      }));\n    }\n\n    if (isToRight) {\n      this.setState(state => ({\n        ...state,\n        restRight: (state.restRight - step > 0) ? state.restRight - step : 0,\n        restLeft: state.restLeft + rightOffset / itemWidth,\n        offset: state.offset + rightOffset * direction,\n      }));\n    }\n  }\n\n  setSettings = (field, value) => {\n    let correctedValue = value;\n\n    if (value === 'false') {\n      correctedValue = false;\n    } else if (value === 'true') {\n      correctedValue = true;\n    } else if (Number.isInteger(parseInt(value, 10))) {\n      correctedValue = parseInt(value, 10);\n    }\n\n    this.setState(state => ({\n      settings: {\n        ...state.settings,\n        [field]: correctedValue,\n        restRight: (field === 'step')\n          ? imagesFromServer.length - correctedValue\n          : state.settings.step,\n      },\n    }));\n  }\n\n  render() {\n    const { settings, images, offset, shift } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>{`Carousel with ${imagesFromServer.length} images`}</h1>\n\n        <CarouselSettings\n          setSettings={this.setSettings}\n          settings={settings}\n        />\n        <Carousel\n          images={images}\n          settings={settings}\n          handleScroll={this.handleScroll}\n          offset={offset}\n          shift={shift}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}